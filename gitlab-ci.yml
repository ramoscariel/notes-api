stages:
  - build
  - unit_test
  - integration_test
  - deploy

variables:
  APP_NAME: notes-api
  JAR_FILE: target/notes-api-0.0.1-SNAPSHOT.jar
  SSH_PRIVATE_KEY: $EC2_SSH_PRIVATE_KEY
  EC2_USER: ubuntu  # o ubuntu, segÃºn la AMI
  EC2_HOST: $EC2_PUBLIC_IP
  REMOTE_DIR: /home/ec2-user/notes-api

before_script:
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan $EC2_HOST >> ~/.ssh/known_hosts

build:
  stage: build
  script:
    - ./mvnw clean package -DskipTests
  artifacts:
    paths:
      - target/*.jar

unit_test:
  stage: unit_test
  script:
    - ./mvnw test -Dtest=com.example.notes_api.unit.NoteTest

integration_test:
  stage: integration_test
  script:
    - ./mvnw test -Dtest=com.example.notes_api.integration.NoteControllerTest

deploy:
  stage: deploy
  script:
    - ssh $EC2_USER@$EC2_HOST "mkdir -p $REMOTE_DIR"
    - scp $JAR_FILE $EC2_USER@$EC2_HOST:$REMOTE_DIR/
    - ssh $EC2_USER@$EC2_HOST "pkill -f $APP_NAME || true"
    - ssh $EC2_USER@$EC2_HOST "nohup java -jar $REMOTE_DIR/$(basename $JAR_FILE) > $REMOTE_DIR/app.log 2>&1 &"
  only:
    - main
